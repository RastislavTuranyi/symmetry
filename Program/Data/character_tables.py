"""
Character tables for use in the program.

This is raw data and its contents should be manipulated with caution.

All the data is stored in pandas DataFrames, where first the body of the character table is defined, and then
the row names (irreducible representations) are inputted.

All the DataFrames are listed in a dictionary.
"""

import pandas as pd

Cs = pd.DataFrame([[1, 1, None, None],
                   [1, 1, 'x, y, $R_z$', '$x^2$, $y^2$, $z^2$, xy'],
                   [1, -1, 'z, $R_x$, $R_y$', 'xz, yz']])
Cs.index = ['Cs', "A'", "A''"]
Cs = Cs.rename(columns={0: 'E', 1: '$σ_h$', 2: 'h', 3: '= 2'})

C2v = pd.DataFrame([[1, 1, 1, 1, None, None],
                    [+1, +1, +1, +1, 'z', '$x^2$, $y^2$, $z^2$'],
                    [+1, +1, -1, -1, '$R_z$', 'xy'],
                    [+1, -1, +1, -1, 'x, $R_y$', 'xz'],
                    [+1, -1, -1, +1, 'y', '$R_x$, yz']
                    ])
C2v.index = ['C2v', 'A1', 'A2', 'B1', 'B2']
C2v = C2v.rename(columns={0: 'E', 1: '$C_2(z)$', 2: '$σ_v(xz)$', 3: '$σ_v(yz)$', 4: 'h', 5: '= 4'})


C3v = pd.DataFrame([[1, 2, 3, None, None],
                    [+1, +1, +1, 'z', '$x^2+y^2$, $z^2$'],
                    [+1, +1, -1, '$R_z$', '-'],
                    [+2, -1, 0, '(x, y), ($R_x$, $R_y$)', '($x^2-y^2$, xy), (xz, yz)']
                    ])
C3v.index = ['C3v', 'A1', 'A2', 'E']
C3v = C3v.rename(columns={0: 'E', 1: '$2C_3(z)$', 2: '$3σ_v$', 3: 'h', 4: '= 6'})

C4v = pd.DataFrame([[1, 2, 1, 2, 2, None, None],
                    [+1, +1, +1, +1, +1, 'z', '$x^2+y^2$, $z^2$'],
                    [+1, +1, +1, -1, -1, '$R_z$', '-'],
                    [+1, -1, +1, +1, -1, '-', '$x^2-y^2$'],
                    [+1, -1, +1, -1, +1, '-', 'xy'],
                    [2, 0, -2, 0, 0, '(x, y), ($R_x$, $R_y$)', 'xz, yz']
                    ])
C4v.index = ['C4v', 'A1', 'A2', 'B1', 'B2', 'E']
C4v = C4v.rename(columns={0: 'E', 1: '$2C_4(z)$', 2: '$C_2$', 3: '$2σ_v$', 4: '$2σ_d$', 5: 'h', 6: '= 8'})

C6v = pd.DataFrame([[1, 2, 2, 1, 3, 3, None, None],
                    [1, +1, +1, +1, +1, +1, 'z', '$x^2+y^2$, $z^2$'],
                    [+1, +1, +1, +1, -1, -1, '$R_z$', '-'],
                    [+1, -1, +1, -1, +1, -1, '-', '-'],
                    [+1, -1, +1, -1, -1, +1, '-', '-'],
                    [+2, +1, -1, -2, 0, 0, '(x, y), ($R_x$, $R_y$)', '(xy, yz)'],
                    [+2, -1, -1, +2, 0, 0, '-', '($x^2-y^2$, xy)']
                    ])
C6v.index = ['C6v', 'A1', 'A2', 'B1', 'B2', 'E1', 'E2']
C6v = C6v.rename(columns={0: 'E', 1: '$2C_6(z)$', 2: '$2C_3(z)$', 3: '$C_2(z)$', 4: '$3σ_v$',
                          5: '$3σ_d$', 6: 'h', 7: '= 12'})

C8v = pd.DataFrame([[1, 2, 2, 2, 1, 4, 4, None, None],
                    [+1, +1, +1, +1, +1, +1, +1, 'z', '$x^2+y^2$, $z^2$'],
                    [+1, +1, +1, +1, +1, -1, -1, '$R_z$', '-'],
                    [+1, -1, +1, -1, +1, +1, -1, '-', '-'],
                    [+1, -1, +1, -1, +1, -1, +1, '-', '-'],
                    [+2, +(2 ** 0.5), 0, -(2 ** 0.5), -2, 0, 0, '(x, y), ($R_x$, $R_y$)', '(xy, yz)'],
                    [+2, 0, -2, 0, +2, 0, 0, '-', '($x^2-y^2$, xy)'],
                    [+2, -(2 ** 0.5), 0, +(2 ** 0.5), -2, 0, 0, '-', '-']
                    ])
C8v.index = ['C8v', 'A1', 'A2', 'B1', 'B2', 'E1', 'E2', 'E3']
C8v = C8v.rename(columns={0: 'E', 1: '$2C_8$', 2: '$2C_4$', 3: '$2(C_8)^3$', 4: '$C_2$', 5: '$4σ_v$',
                          6: '$4σ_d$', 7: 'h', 8: '= 16'})

C2h = pd.DataFrame([[1, 1, 1, 1, None, None],
                    [+1, +1, +1, +1, '$R_z$', '$x^2$, $y^2$, $z^2$, xy'],
                    [+1, -1, +1, -1, '$R_x$, $R_y$', 'xz, yz'],
                    [+1, +1, -1, -1, 'z', '-'],
                    [+1, -1, -1, +1, 'x, y', '-']
                    ])
C2h.index = ['C2h', 'Ag', 'Bg', 'Au', 'Bu']
C2h = C2h.rename(columns={0: 'E', 1: '$C_2(z)$', 2: 'i', 3: '$σ_h$', 4: 'h', 5: '= 4'})

D2h = pd.DataFrame([[1 for i in range(8)].append([None, None]),
                    [+1, +1, +1, +1, +1, +1, +1, +1, '-', '$x^2$, $y^2$, z^2$'],
                    [1, +1, -1, -1, +1, +1, -1, -1, '$R_z$', 'xy'],
                    [+1, -1, +1, -1, +1, -1, +1, -1, '$R_y$', 'xz'],
                    [1, -1, -1, +1, +1, -1, -1, +1, '$R_x$', 'yz'],
                    [+1, +1, +1, +1, -1, -1, -1, -1, '-', '-'],
                    [+1, +1, -1, -1, -1, -1, +1, +1, 'z', '-'],
                    [+1, -1, +1, -1, -1, +1, -1, +1, 'y', '-'],
                    [+1, -1, -1, +1, -1, +1, +1, -1, 'x', '-']
                    ])
D2h.index = ['D2h', 'Ag', 'B1g', 'B2g', 'B3g', 'Au', 'B1u', 'B2u', 'B3u']
C2h = C2h.rename(columns={0: 'E', 1: '$C_2(x)$', 2: '$C_2(y)$', 3: '$C_2(z)$', 4: 'i', 5: 'σ(xy)',
                          6: 'σ(xz)', 7: 'σ(yz)', 8: 'h', 9: '= 8'})

D3h = pd.DataFrame([[1, 2, 3, 1, 2, 3, None, None],
                    [1, +1, +1, +1, +1, +1, '-', '$x^2+y^2$, $z^2$'],
                    [+1, +1, -1, +1, +1, -1, '$R_z$', '-'],
                    [+2, -1, 0, +2, -1, 0, '(x, y)', '($x^2-y^2$, xy)'],
                    [1, +1, +1, -1, -1, -1, '-', '-'],
                    [+1, +1, -1, -1, -1, +1, 'z', '-'],
                    [+2, -1, 0, -2, +1, 0, '(R_x$, $R_y$)', '(xz, yz)']
                    ])
D3h.index = ['D3h', "A'1", "A'2", "E'", "A''1", "A''2", "E''"]
D3h = D3h.rename(columns={0: 'E', 1: '$2C_3(z)$', 2: "$3C''_2$", 3: '$σ_h(xy)$', 4: '$2S_3$',
                          5: '$3σ_v$', 6: 'h', 7: '= 12'})

# noinspection PyTypeChecker
D4h = pd.DataFrame([[1, 2, 1, 2, 2, 1, 2, 1, 2, 2, None, None],
                    [+1, +1, +1, +1, +1, +1, +1, +1, +1, +1, '-', '$x^2+y^2$, $z^2$'],
                    [+1, +1, +1, -1, -1, +1, +1, +1, -1, -1, '$R_z$', '-'],
                    [+1, -1, +1, +1, -1, +1, -1, +1, +1, -1, '-', '$x^2-y^2$'],
                    [+1, -1, +1, -1, +1, +1, -1, +1, -1, +1, '-', 'xy'],
                    [+2, 0, -2, 0, 0, +2, 0, -2, 0, 0, '(R_x$, $R_y$)', '(xz, yz)'],
                    [1, +1, +1, +1, +1, -1, -1, -1, -1, -1, '-', '-'],
                    [+1, +1, +1, -1, -1, -1, -1, -1, +1, +1, 'z', '-'],
                    [+1, -1, +1, +1, -1, -1, +1, -1, -1, +1, '-', '-'],
                    [+1, -1, +1, -1, +1, -1, +1, -1, +1, -1, '-', '-'],
                    [+2, 0, -2, 0, 0, -2, 0, +2, 0, 0, '(x, y)', '-']
                    ])
D4h.index = ['D4h', 'A1g', 'A2g', 'B1g', 'B2g', 'Eg', 'A1u', 'A2u', 'B1u', 'B2u', 'Eu']
D4h = D4h.rename(columns={0: 'E', 1: '$2C_4(z)$', 2: "$C_2$", 3: "$2C'_2$", 4: "$2C''_2$", 5: 'i', 6: '$2S_4$',
                          7: '$σ_h$', 8: '$2σ_v$', 9: '$2σ_d$', 10: 'h', 11: '= 16'})


D6h = pd.DataFrame([[1, 2, 2, 1, 3, 3, 1, 2, 2, 1, 3, 3, None, None],
                    [+1, +1, +1, +1, +1, +1, +1, +1, +1, +1, +1, +1, '-', '$x^2+y^2$, $z^2$'],
                    [+1, +1, +1, +1, -1, -1, +1, +1, +1, +1, -1, -1, '$R_z$', '-'],
                    [+1, -1, +1, -1, +1, -1, +1, -1, +1, -1, +1, -1, '-', '-'],
                    [+1, -1, +1, -1, -1, +1, +1, -1, +1, -1, -1, +1, '-', '-'],
                    [+2, +1, -1, -2, 0, 0, +2, +1, -1, -2, 0, 0, '(R_x$, $R_y$)', '(xz, yz)'],
                    [+2, -1, -1, +2, 0, 0, +2, -1, -1, +2, 0, 0, '-', '($x^2-y^2$, xy)'],
                    [+1, +1, +1, +1, +1, +1, -1, -1, -1, -1, -1, -1, '-', '-'],
                    [+1, +1, +1, +1, -1, -1, -1, -1, -1, -1, +1, +1, 'z', '-'],
                    [+1, -1, +1, -1, +1, -1, -1, +1, -1, +1, -1, +1, '-', '-'],
                    [+1, -1, +1, -1, -1, +1, -1, +1, -1, +1, +1, -1, '-', '-'],
                    [+2, +1, -1, -2, 0, 0, -2, -1, +1, +2, 0, 0, '(x, y)', '-'],
                    [+2, -1, -1, +2, 0, 0, -2, +1, +1, -2, 0, 0, '-', '-']
                    ])
D6h.index = ['D6h', 'A1g', 'A2g', 'B1g', 'B2g', 'E1g', 'E2g', 'A1u', 'A2u', 'B1u', 'B2u', 'E1u', 'E2u']
D6h = D6h.rename(columns={0: 'E', 1: '$2C_6(z)$', 2: '$2C_3$', 3: "$C_2$", 4: "$3C'_2$", 5: "$3C''_2$", 6: 'i',
                          7: '$2S_3$', 8: '$2S_6$', 9: '$σ_h(xy)$', 10: '$3σ_d$', 11: '$3σ_v$', 12: 'h', 13: '= 24'})


D2d = pd.DataFrame([[1, 2, 1, 2, 2, None, None],
                    [+1, +1, +1, +1, +1, '-', '$x^2+y^2$, $z^2$'],
                    [+1, +1, +1, -1, -1, '$R_z$', '-'],
                    [+1, -1, +1, +1, -1, '-', '$x^2-y^2$'],
                    [+1, -1, +1, -1, +1, 'z', 'xy'],
                    [+2, 0, -2, 0, 0, '(x, y), ($R_x$, $R_y$)', '(xz, yz)']
                    ])
D2d.index = ['D2d', 'A1', 'A2', 'B1', 'B2', 'E']
D2d = D2d.rename(columns={0: 'E', 1: '$2S_4$', 2: '$C_2(z)$', 3: "$2C'_2$", 4: '$2σ_d$', 5: 'h', 6: '= 8'})

D3d = pd.DataFrame([[1, 2, 3, 1, 2, 3, None, None],
                    [1, +1, +1, +1, +1, +1, '-', '$x^2+y^2$, $z^2$'],
                    [+1, +1, -1, +1, +1, -1, '$R_z$', '-'],
                    [+2, -1, 0, +2, -1, 0, '($R_x$, $R_y$)', '($x^2-y^2$, xy), (xz, yz)'],
                    [1, +1, +1, -1, -1, -1, '-', '-'],
                    [+1, +1, -1, -1, -1, +1, 'z', '-'],
                    [+2, -1, 0, -2, +1, 0, '(x, y)', '-']
                    ])
D3d.index = ['D3d', 'A1g', 'A2g', 'Eg', 'A1u', 'A2u', 'Eu']
D3d = D3d.rename(columns={0: 'E', 1: '$2C_3$', 2: "$3C'_2$", 3: 'i', 4: '$2S_6$', 5: '$3σ_d$', 6: 'h', 7: '= 12'})

D4d = pd.DataFrame([[1, 2, 2, 2, 1, 4, 4, None, None],
                    [+1, +1, +1, +1, +1, +1, +1, '-', '$x^2+y^2$, $z^2$'],
                    [+1, +1, +1, +1, +1, -1, -1, '$R_z$', '-'],
                    [+1, -1, +1, -1, +1, +1, -1, '-', '-'],
                    [+1, -1, +1, -1, +1, -1, +1, 'z', '-'],
                    [+2, +(2 ** .5), 0, -(2 ** .5), -2, 0, 0, '(x, y)', '-'],
                    [+2, 0, -2, 0, +2, 0, 0, '-', '($x^2-y^2$, xy)'],
                    [+2, -(2 ** .5), 0, +(2 ** .5), -2, 0, 0, '($R_x$, $R_y$)', '(xz, yz)']
                    ])
D4d.index = ['D4d', 'A1', 'A2', 'B1', 'B2', 'E1', 'E2', 'E3']
D4d = D4d.rename(columns={0: 'E', 1: '$2S_8$', 2: '$2C_4$', 3: '$2(S_8)^3$', 4: "$C_2$", 5: "$4C'_2$", 6: '$4σ_d$',
                          7: 'h', 8: '= 16'})


D6d = pd.DataFrame([[1, 2, 2, 2, 2, 2, 1, 6, 6, None, None],
                    [+1, +1, +1, +1, +1, +1, +1, +1, +1, '-', '$x^2+y^2$, $z^2$'],
                    [+1, +1, +1, +1, +1, +1, +1, -1, -1, '$R_z$', '-'],
                    [+1, -1, +1, -1, +1, -1, +1, +1, -1, '-', '-'],
                    [+1, -1, +1, -1, +1, -1, +1, -1, +1, 'z', '-'],
                    [+2, +(3 ** .5), +1, 0, -1, -(3 ** .5), -2, 0, 0, '(x, y)', '-'],
                    [+2, +1, -1, -2, -1, +1, +2, 0, 0, '-', '($x^2-y^2$, xy)'],
                    [+2, 0, -2, 0, +2, 0, -2, 0, 0, '-', '-'],
                    [+2, -1, -1, +2, -1, -1, +2, 0, 0, '-', '-'],
                    [2, -(3 ** .5), +1, 0, -1, +(3 ** .5), -2, 0, 0, '($R_x$, $R_y$)', '(xz, yz)']
                    ])
D6d.index = ['D6d', 'A1', 'A2', 'B1', 'B2', 'E1', 'E2', 'E3', 'E4', 'E5']
D6d = D6d.rename(columns={0: 'E', 1: '$2S_12$', 2: '$2C_6$', 3: '$2S_4$', 4: '$2C_3$', 5: '$2(S_12)^5$',
                          6: "$C_2$", 7: "$6C'_2$", 8: '$6σ_d$', 9: 'h', 10: '= 24'})


Td = pd.DataFrame([[1, 8, 3, 6, 6, None, None],
                   [+1, +1, +1, +1, +1, '-', '$x^2+y^2+z^2$'],
                   [1, +1, +1, -1, -1, '-', '-'],
                   [+2, -1, +2, 0, 0, '-', '($2z^2-x^2-y^2$, $x^2-y^2$)'],
                   [+3, 0, -1, +1, -1, '($R_x$, $R_y$, $R_z$)', '-'],
                   [+3, 0, -1, -1, +1, '(x, y, z)', '(xy, xz, yz)']
                   ])
Td.index = ['Td', 'A1', 'A2', 'E', 'T1', 'T2']
Td = Td.rename(columns={0: 'E', 1: '$8C_3$', 2: '$3C_2$', 3: '$6S_4$', 4: '$6σ_d$', 5: 'h', 6: '= 24'})


O = pd.DataFrame([[1, 8, 6, 6, 3, None, None],
                  [+1, +1, +1, +1, +1, '-', '$x^2+y^2+z^2$'],
                  [+1, +1, -1, -1, +1, '-', '-'],
                  [+2, -1, 0, 0, +2, '-', '($2z^2-x^2-y^2$, $x^2-y^2$)'],
                  [+3, 0, -1, +1, -1, '(x, y, z), ($R_x$, $R_y$, $R_z$)', '-'],
                  [+3, 0, +1, -1, -1, '-', '(xy, xz, yz)']
                  ])
O.index = ['O', 'A1', 'A2', 'E', 'T1', 'T2']
O = O.rename(columns={0: 'E', 1: '$8C_3$', 2: "$6C'_2$", 3: '$6C_4$', 4: '$3C_2=(C_4)^2$', 5: 'h', 6: '= 24'})


Oh = pd.DataFrame([[1, 8, 6, 6, 3, 1, 6, 8, 3, 6, None, None],
                   [+1, +1, +1, +1, +1, +1, +1, +1, +1, +1, '-', '$x^2+y^2+z^2$'],
                   [+1, +1, -1, -1, +1, +1, -1, +1, +1, -1, '-', '-'],
                   [+2, -1, 0, 0, +2, +2, 0, -1, +2, 0, '-', '($2z^2-x^2-y^2$, $x^2-y^2$)'],
                   [+3, 0, -1, +1, -1, +3, +1, 0, -1, -1, '($R_x$, $R_y$, $R_z$)', '-'],
                   [+3, 0, +1, -1, -1, +3, -1, 0, -1, +1, '-', '(xy, xz, yz)'],
                   [+1, +1, +1, +1, +1, -1, -1, -1, -1, -1, '-', '-'],
                   [+1, +1, -1, -1, +1, -1, +1, -1, -1, +1, '-', '-'],
                   [+2, -1, 0, 0, +2, -2, 0, +1, -2, 0, '-', '-'],
                   [+3, 0, -1, +1, -1, -3, -1, 0, +1, +1, '(x, y, z)', '-'],
                   [+3, 0, +1, -1, -1, -3, +1, 0, +1, -1, '-', '-']
                   ])
Oh.index = ['Oh', 'A1g', 'A2g', 'Eg', 'T1g', 'T2g', 'A1u', 'A2u', 'Eu', 'T1u', 'T2u']
Oh = Oh.rename(columns={0: 'E', 1: '$8C_3$', 2: "$6C_2$", 3: '$6C_4$', 4: '$3C_2=(C_4)^2$', 5: 'i', 6: '6S_4',
                        7: '8S_6', 8: '$3σ_h$', 9: '$6σ_d$', 10: 'h', 11: '= 48'})


character_tables = {'Cs': Cs, 'C2v': C2v, 'C3v': C3v, 'C4v': C4v, 'C6v': C8v,
                    'C2h': C2h,
                    'D2h': D2h, 'D3h': D3h, 'D4h': D4h, 'D6h': D6h,
                    'D2d': D2d, 'D3d': D3d, 'D4d': D4d, 'D6d': D6d,
                    'Td': Td, 'O': O, 'Oh': Oh}

#for i, j in character_tables.items():
    #j.to_csv(f'CSV/{i}.csv', ';')

#gg = pd.read_csv(f'CSV/Cs.csv', index_col=0, sep=';')
#print(gg.dtypes)
